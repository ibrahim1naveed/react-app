{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,QACrB,mCAAON,EAAMI,QAAQG,aCHhBC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2DCG,E,kDA1Db,aAAe,IAAD,8BACZ,gBAkBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAad,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAAET,SAAUkB,S,oBAQ5C,WAAS,MAE0BC,KAAKN,MAA/Bb,EAFA,EAEAA,SAAUU,EAFV,EAEUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OAEE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAce,KAAKf,eAGnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAxCVI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6eb77e67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>    \n        <h2> { props.monster.name }</h2>\n        <p>  { props.monster.email }</p>\n\n    </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n    \n    <div className='card-list'>\n        {props.monsters.map(monster => (\n          <Card key={monster.id} monster={monster}></Card>\n          ))}\n    </div>\n);","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n    className='search'\n    type='search' \n    placeholder={placeholder} \n    onChange={handleChange}\n    />\n);","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'; \nimport { SearchBox } from './components/search-box/search-box.component';\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    \n    };\n    //this.state = {string: 'this is sym'};\n    //this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState( { monsters: users }));\n  } \n\n  handleChange = e =>  {\n    this.setState({searchField: e.target.value}) ;\n    // you have explicitly state what you want the context of 'this' to be.\n  }\n\n  render() {\n    // filtering the monsters according to the search field.\n    const {monsters, searchField } = this.state; //used to destructure the object.\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      \n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n        placeholder='Search Monster'\n        handleChange={this.handleChange} \n        />\n\n        <CardList monsters={filteredMonsters} />  \n      </div>\n    );\n  }\n}\n        /*<div className='App'>\n          <header className='App-header'>\n            <img src={logo} className='App-logo' alt='logo' />\n            <p>{ this.state.string }</p>\n            <button onClick={() => this.setState( {string: 'hello this is actually ibrahim'})}>\n              Change text here.\n            </button>\n          </header>\n        </div>*/\n    \n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}